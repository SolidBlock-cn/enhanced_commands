{
  "argument.ecBlockStatePredicate.above_block": "Above a block that matches a predicate",
  "argument.ecBlockStatePredicate.anyValue": "Matches any value, as long as the property exists",
  "argument.ecBlockStatePredicate.beneath_block": "Beneath a block that matches a predicate",
  "argument.ecBlockStatePredicate.cannotParse": "Cannot parse",
  "argument.ecBlockStatePredicate.comparator_expected": "Comparator expected",
  "argument.ecBlockStatePredicate.end_of_properties": "End of properties",
  "argument.ecBlockStatePredicate.next_property": "Next property",
  "argument.ecBlockStatePredicate.noneValue": "Don't match values, which means the property should not exist",
  "argument.ecBlockStatePredicate.start_of_properties": "Start of properties",
  "argument.ecBlockStatePredicate.unknown_comparator": "Unknown comparator: %s",
  "blockPredicate.bi_predicate_diff": "Takes two conditions, passes only one pass and another fail",
  "blockPredicate.bi_predicate_diff_fail": "As in the two tests, one passed and another failed, the test failed:",
  "blockPredicate.bi_predicate_diff_pass": "As in the two tests, one passed and another failed, the test passed:",
  "blockPredicate.bi_predicate_same": "Takes two conditions, passes only both pass or both fail",
  "blockPredicate.bi_predicate_same_fail": "As both of the tests passed or failed, the test failed:",
  "blockPredicate.bi_predicate_same_pass": "As both of the tests passed of failed, the test passed:",
  "blockPredicate.expected_property_does_not_exist": "The block at %s does not have property %s, but the expected result is %s",
  "blockPredicate.fail": "The block at %s fails the test",
  "blockPredicate.in_the_tag": "The block at %s is %s, which is in the tag %s",
  "blockPredicate.intersect": "Intersect multiple conditions, passes only if all pass",
  "blockPredicate.intersect.fail": "As some of the following failed (%s/%s), the test failed:",
  "blockPredicate.intersect.pass": "As all of the following passed (%s/%s), the test passes:",
  "blockPredicate.negation": "Negation",
  "blockPredicate.negation.fail": "The block at %s fails the test, because:",
  "blockPredicate.negation.pass": "The block at %s passes the test, because:",
  "blockPredicate.no_property_this_name": "The block %s has no property named %s",
  "blockPredicate.no_property_this_name_empty": "The block %s has no property with empty name",
  "blockPredicate.not_in_the_tag": "The block at %s is %s, which is not in the tag %s",
  "blockPredicate.not_the_block": "The block at %s is %s, but the expected value is %s",
  "blockPredicate.pass": "The block at %s passes the test",
  "blockPredicate.probability": "Only passes under a probability",
  "blockPredicate.probability.fail": "Probability test failed: random value %s exceeds expected %s",
  "blockPredicate.probability.pass": "Probability test passes: random value %s is lower than %s",
  "blockPredicate.property_name_fail_does_not_exist": "The block %s does not have the property named %s",
  "blockPredicate.property_name_fail_exists": "The block %s has the property named %s",
  "blockPredicate.property_name_pass_does_not_exist": "The block %s does not have the property named %s",
  "blockPredicate.property_name_pass_exists": "The block %s has the property named %s",
  "blockPredicate.property_not_this_value": "The block at %s has the property %s, but the expected value is %s",
  "blockPredicate.property_test_pass": "Property test %s passed",
  "blockPredicate.property_value_not_parsed": "The property %s cannot parse the value %s",
  "blockPredicate.property_value_not_parsed_empty": "The property %s cannot parse the empty value",
  "blockPredicate.test_relative_above_fail": "The block at %s blocks above %s fails the test, because:",
  "blockPredicate.test_relative_above_pass": "The block at %s blocks above %s passes the test, because:",
  "blockPredicate.test_relative_below_fail": "The block at %s blocks below %s fails the test, because:",
  "blockPredicate.test_relative_below_pass": "The block at %s blocks below %s passes the test, because:",
  "blockPredicate.union": "Union multiple conditions, passes if at least one passes",
  "blockPredicate.union.fail": "As none of the following passed (%s/%s), the test failed:",
  "blockPredicate.union.pass": "As at least one of the following passed (%s/%s), the test passes:",
  "enhancedCommands.blockPos": "(%s %s %s)",
  "enhancedCommands.paramTooFew": "The number of parameters (%s) is lower than the limit (%s)",
  "enhancedCommands.paramTooMany": "The number of parameters (%s) exceeds the limit (%s)",
  "enhancedCommands.testfor.block.info": "The block at %s is %s (%s)",
  "enhancedCommands.testfor.block.info_with_properties": "The block at %s is %s (%s), with the following properties",
  "enhancedCommands.testfor.blockinfo.hardness": "The block at %s has the hardness %s",
  "enhancedCommands.testfor.blockinfo.luminance": "The block at %s has the luminance %s",
  "enhancedCommands.testfor.blocinfo.strong_redstone_power": "The block at %s has the strong redstone power %s",
  "enhancedCommands.testfor.blocinfo.weak_redstone_power": "The block at %s has the weak redstone power %s"
}